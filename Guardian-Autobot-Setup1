#!/bin/bash

#****************************************************************************************************#
#                                      GUARDIAN AUTOBOT (SETUP 1)                                    #
#****************************************************************************************************#

#-----------------------------------------------------------------------------------------------------
# INSTALLING REM PROTOCOL BINARIES
#-----------------------------------------------------------------------------------------------------

wget https://github.com/Remmeauth/remprotocol/releases/download/0.3.0/remprotocol_0.3.0_amd64.deb && sudo apt install ./remprotocol_0.3.0_amd64.deb

#-----------------------------------------------------------------------------------------------------
# BOOTING REMNODE AND WALLET
#-----------------------------------------------------------------------------------------------------

wget https://remchain.remme.io/genesis.json

#-----------------------------------------------------------------------------------------------------
# CREATING A CONFIG AND DATA DIRECTORIES
#-----------------------------------------------------------------------------------------------------

mkdir data && mkdir config

#-----------------------------------------------------------------------------------------------------
# CONFIGURATION FILE (CONFIG/CONFIG.INI)
#-----------------------------------------------------------------------------------------------------

echo -e "plugin = eosio::chain_api_plugin\n\nplugin = eosio::net_api_plugin\n\nhttp-server-address = 0.0.0.0:8888\n\np2p-listen-endpoint = 0.0.0.0:9876\n\n# https://remme.io\n\np2p-peer-address = p2p.remchain.remme.io:2087\n\nverbose-http-errors = true\n\nchain-state-db-size-mb = 100480\n\nreversible-blocks-db-size-mb = 10480" > ./config/config.ini

#-----------------------------------------------------------------------------------------------------
# THE INITIAL RUN OF THE REMNODE
#-----------------------------------------------------------------------------------------------------

remnode --config-dir ./config/ --data-dir ./data/ --delete-all-blocks --genesis-json genesis.json >> remnode.log 2>&1 & > /dev/null 2>&1
sleep 7

while [ : ]
do
	systemdt=$(date '+%Y-%m-%dT%H:%M')

	if [ "$dt1" == "$systemdt" ]; then
		break
	else
		dt1=$(remcli get info | grep head_block_time | cut -c 23-38)
		dt1date=$(echo $dt1 | awk -F'T' '{print $1}' | awk -F'-' 'BEGIN {OFS="-"}{ print $3, $2, $1}')
		dt1time=$(echo $dt1 | awk -F'T' '{print $2}' | awk -F':' 'BEGIN {OFS=":"}{ print $1, $2}')

		dt2=$(tail -n 1 remnode.log | awk '{print $2}'| awk -F'.' '{print $1}')
		dt2date=$(echo $dt2 | awk -F'T' '{print $1}' | awk -F'-' 'BEGIN {OFS="-"}{ print $3, $2, $1}')
		dt2time=$(echo $dt2 | awk -F'T' '{print $2}' | awk -F':' 'BEGIN {OFS=":"}{ print $1, $2}')

		echo "Fetching blocks for [${dt1date} | ${dt1time}] | Current block date [${dt2date} | ${dt2time}]"
	fi

	echo ""
	sleep 2
done

#-----------------------------------------------------------------------------------------------------
# UPDATING AND UPGRADING PACKAGE DATABASE
#-----------------------------------------------------------------------------------------------------

sudo -S apt update && sudo -S apt upgrade -y
echo ""

#-----------------------------------------------------------------------------------------------------
# RUNNING THE WALLET DAEMON
#-----------------------------------------------------------------------------------------------------

remvault &
sleep 2

printf "\n"
read -p 'Press [Enter] key to continue...'
printf "\n\n"

#-----------------------------------------------------------------------------------------------------
# CREATING THE REMCLI WALLET
#-----------------------------------------------------------------------------------------------------

remcli wallet create --file walletpass
walletpass=$(cat walletpass)
printf "\n\n"

#-----------------------------------------------------------------------------------------------------
# YOUR REMNODE WALLET PASSWORD
#-----------------------------------------------------------------------------------------------------

printf "[********************* TAKE NOTE OF YOUR WALLET PASSWORD *********************]\n\n"

cat ./walletpass
printf "\n"
echo " "
echo " "
read -p 'Press [Enter] key to continue...'
printf "\n\n"

#-----------------------------------------------------------------------------------------------------
# INPUT YOUR GUARDIAN PRIVATE KEY
#-----------------------------------------------------------------------------------------------------

printf "[********************* ENTER YOUR GUARDIAN PRIVATE KEY ***********************]\n\n"

while [ : ]
do
          read -p "ENTER YOUR GUARDIAN PRIVATE KEY: " guardianprivatekey

	  if [[ ! "$guardianprivatekey" = "${guardianprivatekey%[[:space:]]*}" ]]; then
	        printf "\nERROR: PRIVATE KEY SHOULDN'T CONTAIN ANY SPACES.\n\n"
                continue

        elif [[ ${#guardianprivatekey} -ne 51 ]]; then
                printf "\nERROR: PRIVATE KEY SHOULD ONLY BE 51 CHARACTERS LONG.\n\n"
                continue

       	elif [[ "$guardianprivatekey" =~ ['!@#$%^&*()_+,.Â£'] ]]; then
	        printf "\nERROR: PRIVATE KEY SHOULDN'T CONTAIN ANY SYMBOLS.\n\n"
		continue

	else
                break
          fi
done

#-----------------------------------------------------------------------------------------------------
# IMPORT YOUR GUARDIAN KEY INTO THE WALLET
#-----------------------------------------------------------------------------------------------------

printf "\n\n"

remcli wallet lock > /dev/null 2>&1
remcli wallet unlock --password=$walletpass > /dev/null 2>&1
remcli wallet import --private-key=$guardianprivatekey

printf "\n\n"
