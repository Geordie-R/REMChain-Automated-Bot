#!/bin/bash

#****************************************************************************************************#
#                                      GUARDIAN AUTOBOT (SETUP 2)                                    #
#****************************************************************************************************#

#-----------------------------------------------------------------------------------------------------
# IF THE USER HAS NO ROOT PERMISSIONS THE SCRIPT WILL EXIT
#-----------------------------------------------------------------------------------------------------

if (($EUID!=0))
then
  echo "You must be root to run this script" 2>&1
  exit 1
fi

#****************************************************************************************************#
#                                       CONFIGURATION VARIABLES                                      #
#****************************************************************************************************#

#-----------------------------------------------------------------------------------------------------
# CREATE AUTOBOT DIRECTORY
#-----------------------------------------------------------------------------------------------------

create_dir="/root/remblock/autobot"

#-----------------------------------------------------------------------------------------------------
# CREATE AUTOBOT CONFIG FILE
#-----------------------------------------------------------------------------------------------------

config_file="/root/remblock/autobot/config"

#-----------------------------------------------------------------------------------------------------
# MINUTES TO WAIT BETWEEN EACH EXECUTIONS OF THE SCRIPT
#-----------------------------------------------------------------------------------------------------

minutes_to_wait=1442

#-----------------------------------------------------------------------------------------------------
# INITIATE BOOLEAN VARIABLES FOR THE AUTOBOT SCRIPT
#-----------------------------------------------------------------------------------------------------

auto_vote=false
auto_reward=false
auto_restaking=false
auto_transfer=false
auto_vote_alert=false
auto_reward_alert=false
auto_restaking_alert=false
auto_transfer_alert=false
vote_failed=false
reward_failed=false
restaking_failed=false
transfer_failed=false
send_message=false

#-----------------------------------------------------------------------------------------------------
# CHECK IF THE REQUIRED PACKAGES WERE INSTALLED, IF NOT INSTALL THEM
#-----------------------------------------------------------------------------------------------------

if ! dpkg -l | awk '{print $2}' | grep -w at &>/dev/null
then
  echo "at package was not installed, installing it now..."
  apt-get install at -y
fi
if ! dpkg -l | awk '{print $2}' | grep -w bc &>/dev/null
then
  echo "bc package was not installed, installing it now..."
  apt-get install bc -y
fi

#-----------------------------------------------------------------------------------------------------
# CHECK IF THE AT CONDITION IS ENABLE TO AVOID PRINTING ANY OUTPUT
#-----------------------------------------------------------------------------------------------------

at=false
if [[ "$1" == "--at" ]]
then
  at=true
  at now + $minutes_to_wait minutes << DOC &>/dev/null
  /root/autobot2 --at
DOC
fi

#-----------------------------------------------------------------------------------------------------
# CREATE THE DIRECTORY IF IT DOES NOT EXIST
#-----------------------------------------------------------------------------------------------------

if [ ! -d "$create_dir" ]
then
  mkdir -p "$create_dir"
fi

#-----------------------------------------------------------------------------------------------------
# CREATE THE CONFIG FILE IF IT DOES NOT EXIST
#-----------------------------------------------------------------------------------------------------

if [ ! -f "$config_file" ]
then
  echo "#Configuration file for the autobot.sh script" > "$config_file"
  echo "#Make the entries as variable=value" >> "$config_file"
  echo  >> "$config_file"
fi

#****************************************************************************************************#
#                                        FUNCTION DEFINITIONS                                        #
#****************************************************************************************************#

progress-bar() {

  local duration=${1}
  already_done() { for ((done=0; done<$elapsed; done++)); do printf "â–‡"; done }
  remaining() { for ((remain=$elapsed; remain<$duration; remain++)); do printf " "; done }
  percentage() { printf "| %s%%" $(( (($elapsed)*100)/($duration)*100/100 )); }
  clean_line() { printf "\r"; }

  for (( elapsed=1; elapsed<=$duration; elapsed++ )); do
      already_done; remaining; percentage
      sleep 1
      clean_line

  done
  clean_line

}

function get_user_answer_yn(){
  while :
  do
    read -p "$1 [y/n]: " answer
    answer="$(echo $answer | tr '[:upper:]' '[:lower:]')"
    case "$answer" in
      yes|y) return 0 ;;
      no|n) return 1 ;;
      *) echo  "Invalid Answer [yes/y/no/n expected]";continue;;
    esac
  done
}

#-----------------------------------------------------------------------------------------------------
# GLOBAL VALUE IS USED AS A GLOBAL VARIABLE TO RETURN THE RESULT
#-----------------------------------------------------------------------------------------------------

function get_config_value(){
  global_value=$(grep -v '^#' "$config_file" | grep "^$1=" | awk -F '=' '{print $2}')
  if [ -z "$global_value" ]
  then
    return 1
  else
    return 0
  fi
}

#****************************************************************************************************#
#                                       MAIN PROGRAM FUNCTIONS                                       #
#****************************************************************************************************#

#Fill possible missing config variables

if get_config_value vote_permission
then
  vote_permission="$global_value"
else
  vote_permission="guardian"
  echo "vote_permission=$vote_permission" >> "$config_file"
fi

if get_config_value claim_permission
then
  claim_permission="$global_value"
else
  claim_permission="guardian"
  echo "claim_permission=$claim_permission" >> "$config_file"
fi

if get_config_value stake_permission
then
  stake_permission="$global_value"
else
  stake_permission="guardian"
  echo "stake_permission=$stake_permission" >> "$config_file"
fi

if get_config_value transfer_permission
then
  transfer_permission="$global_value"
else
  transfer_permission="active"
  echo "transfer_permission=$transfer_permission" >> "$config_file"
fi

#-----------------------------------------------------------------------------------------------------
# ASK USER FOR THEIR OWNER ACCOUNT NAME OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

if get_config_value owner
then
  owneraccountname="$global_value"
else
  if $at
  then
    exit 2
  fi
  echo
  read -p "YOUR ACCOUNT NAME: " -e owneraccountname
  echo "owner=$owneraccountname" >> "$config_file"
  echo
fi

#-----------------------------------------------------------------------------------------------------
# ASK USER FOR THEIR WALLET PASSWORD OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

if get_config_value walletpassword
then
  walletpassword="$global_value"
else
  if $at
  then
    exit 2
  fi
  read -p "YOUR WALLET PASSWORD: " -e walletpassword
  echo "walletpassword=$walletpassword" >> "$config_file"
  echo
fi

#-----------------------------------------------------------------------------------------------------
# GET AUTOMATED VOTING ANSWER FROM THE USER OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

if get_config_value auto_vote
then
  if [ "$global_value" = "true" ]
  then
    auto_vote=true
  fi
else
  if $at
  then
    exit 2
  fi
  if get_user_answer_yn "DO YOU WANT AUTOBOT TO AUTOMATE YOUR VOTING"
  then
    auto_vote=true
    echo "auto_vote=true" >> "$config_file"
  else
    echo "auto_vote=false" >> "$config_file"
  fi
  echo
fi

#-----------------------------------------------------------------------------------------------------
# IF AUTOMATED VOTING IS ENABLED, ASK THE USER FOR ACCOUNT NAMES OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

if $auto_vote
then
 if get_config_value bpaccountnames
 then
   bpaccountnames="$global_value"
else
   if $at
   then
     exit 2
   fi
   read -p "THE BLOCK PRODUCERS THAT YOU WANT TO VOTE FOR: " -e bpaccountnames
   if [ -z "$bpaccountnames" ]
   then
     bpaccountnames="$owneraccountname"
   fi
   echo "bpaccountnames=$bpaccountnames" >> "$config_file"
  echo
fi

#-----------------------------------------------------------------------------------------------------
# GET VOTING NOTIFCATION ANSWER FROM THE USER OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

if get_config_value auto_vote_alert
then
  if [ "$global_value" = "true" ]
  then
    auto_vote_alert=true
  fi
  else
    if $at
    then
      exit 2
    fi
    if get_user_answer_yn "DO YOU WANT TO RECEIVE VOTING NOTIFICATIONS"
    then
      auto_vote_alert=true
      echo "auto_vote_alert=true" >> "$config_file"
    else
      echo "auto_vote_alert=false" >> "$config_file"
    fi
    echo
  fi
fi

#-----------------------------------------------------------------------------------------------------
# GET AUTOMATED REWARDS ANSWER FROM THE USER OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

if get_config_value auto_reward
then
  if [ "$global_value" = "true" ]
  then
    auto_reward=true
  fi
else
  if $at
  then
    exit 2
  fi
  if get_user_answer_yn "DO YOU WANT AUTOBOT TO AUTO CLAIM YOUR REWARDS"
  then
    auto_reward=true
    echo "auto_reward=true" >> "$config_file"
  else
    echo "auto_reward=false" >> "$config_file"
  fi
  echo
fi

#-----------------------------------------------------------------------------------------------------
# GET REWARD NOTIFCATION ANSWER FROM THE USER OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

if $auto_reward
then
  if get_config_value auto_reward_alert
  then
    if [ "$global_value" = "true" ]
    then
      auto_reward_alert=true
    fi
  else
    if $at
    then
      exit 2
    fi
    if get_user_answer_yn "DO YOU WANT TO RECEIVE REWARD NOTIFICATIONS"
    then
      auto_reward_alert=true
      echo "auto_reward_alert=true" >> "$config_file"
    else
      echo "auto_reward_alert=false" >> "$config_file"
    fi
    echo
  fi

#-----------------------------------------------------------------------------------------------------
# GET AUTOMATED RESTAKING ANSWER FROM THE USER OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

  if get_config_value auto_restaking
  then
    if [ "$global_value" = "true" ]
    then
      auto_restaking=true
    fi
  else
    if $at
    then
      exit 2
    fi
    if get_user_answer_yn "DO YOU WANT AUTOBOT TO AUTO RESTAKE YOUR REWARDS"
    then
      auto_restaking=true
      echo "auto_restaking=true" >> "$config_file"
    else
      echo "auto_restaking=false" >> "$config_file"
    fi
    echo
  fi

#-----------------------------------------------------------------------------------------------------
# GET THE RESTAKING PERCENTAGE FROM THE USER OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

  if $auto_restaking
  then
    if get_config_value restakingpercentage
    then
      restakingpercentage="$global_value"
    else
      if $at
      then
        exit 2
      fi
      read -p "PLEASE SET YOUR RESTAKING PERCENTAGE: " -e restakingpercentage
      echo "restakingpercentage=$restakingpercentage" >> "$config_file"
      echo
    fi
    restakingpercentage=$(echo $restakingpercentage | tr -d '%' )

#-----------------------------------------------------------------------------------------------------
# GET RESTAKING NOTIFCATION ANSWER FROM THE USER OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

    if get_config_value auto_restaking_alert
    then
      if [ "$global_value" = "true" ]
      then
        auto_restaking_alert=true
      fi
    else
      if $at
      then
        exit 2
      fi
      if get_user_answer_yn "DO YOU WANT TO RECEIVE RESTAKING NOTIFICATIONS"
      then
        auto_restaking_alert=true
        echo "auto_restaking_alert=true" >> "$config_file"
      else
        echo "auto_restaking_alert=false" >> "$config_file"
      fi
      echo
    fi
  fi

#-----------------------------------------------------------------------------------------------------
# ASK THE USER FOR THE TRANSFER ACCOUNT NAME, TRANSFER PERCENTAGE AND TRANSFER NOTIFICATIONS
#-----------------------------------------------------------------------------------------------------

  if get_config_value auto_transfer
  then
    if [ "$global_value" = "true" ]
    then
      auto_transfer=true
      if get_config_value auto_transfer_acct
      then
        auto_transfer_acct="$global_value"
      else
        echo "ERROR: auto_transfer_acct must be set when using auto_transfer"
	exit 1
      fi
      if get_config_value auto_transfer_perc
      then
        auto_transfer_perc="$global_value"
      else
        echo "ERROR: auto_transfer_perc must be set when using auto_transfer"
	exit 1
      fi
      if get_config_value auto_transfer_alert
      then
        auto_transfer_alert="$global_value"
      else
        echo "ERROR: auto_transfer_alert must be set when using auto_transfer"
	exit 1
      fi
    fi
  else
    if $at
    then
      exit 2
    fi
    if get_user_answer_yn "DO YOU WANT AUTOBOT TO AUTO TRANSFER YOUR REWARDS"
    then
      auto_transfer=true
      echo "auto_transfer=true" >> "$config_file"
      echo
      read -p "PLEASE SET YOUR TRANSFER ACCOUNT NAME: " -e auto_transfer_acct
      echo "auto_transfer_acct=$auto_transfer_acct" >> "$config_file"
      echo
      read -p "PLEASE SET YOUR TRANSFER PERCENTAGE: " -e auto_transfer_perc
      auto_transfer_perc=$(echo $auto_transfer_perc | tr -d '%' )
      echo "auto_transfer_perc=$auto_transfer_perc" >> "$config_file"
      echo
      if get_user_answer_yn "DO YOU WANT TO RECEIVE TRANSFER NOTIFICATIONS"
      then
        auto_transfer_alert=true
        echo "auto_transfer_alert=true" >> "$config_file"
      else
        echo "auto_transfer_alert=false" >> "$config_file"
      fi
    else
      echo "auto_transfer=false" >> "$config_file"
    fi
    echo
  fi
fi

#-----------------------------------------------------------------------------------------------------
# GET TELEGRAM TOKEN FROM THE USER OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

if $auto_vote_alert || $auto_reward_alert || $auto_transfer_alert || $auto_restaking_alert || $bp_monitoring
then
  if get_config_value telegram_token
  then
    telegram_token="$global_value"
  else
    if $at
    then
      exit 2
    fi
    read -p "COPY AND PASTE YOUR TELEGRAM TOKEN: " -e telegram_token
    echo "telegram_token=$telegram_token" >> "$config_file"
    echo
  fi

#-----------------------------------------------------------------------------------------------------
# GET TELEGRAM CHAT ID FROM THE USER OR TAKE IT FROM THE CONFIG FILE
#-----------------------------------------------------------------------------------------------------

  if get_config_value telegram_chatid
  then
    telegram_chatid="$global_value"
  else
    if $at
    then
      exit 2
    fi
    read -p "COPY AND PASTE YOUR TELEGRAM CHAT ID: " -e telegram_chatid
    echo "telegram_chatid=$telegram_chatid" >> "$config_file"
    echo
  fi
fi

#-----------------------------------------------------------------------------------------------------
# REMCLI COMMANDS FOR UNLOCKING YOUR WALLET
#-----------------------------------------------------------------------------------------------------

output=$(remcli wallet unlock --password $walletpassword 2>&1)
#Uncomment if you want the output of the command printed
#if ! $at; then echo $output; fi

#-----------------------------------------------------------------------------------------------------
# REMCLI COMMAND FOR CASTING YOUR VOTES
#-----------------------------------------------------------------------------------------------------

if $auto_vote
then
  voteoutput=$(remcli system voteproducer prods $owneraccountname $bpaccountnames -p $owneraccountname@$vote_permission -f 2>&1)
  #Uncomment if you want the output of the command printed
  #if ! $at; then echo $output; fi
  if [[ ! "$voteoutput" =~ "executed transaction" ]]; then vote_failed=true; fi
fi

#-----------------------------------------------------------------------------------------------------
# REMCLI COMMAND FOR CLAIMING YOUR REWARDS
#-----------------------------------------------------------------------------------------------------

if $auto_reward
then
  previous=$(remcli get currency balance rem.token $owneraccountname | awk '{print $1}')
  rewardoutput=$(remcli system claimrewards $owneraccountname -x 120 -p $owneraccountname@$claim_permission -f 2>&1)
  #Uncomment if you want the output of the command printed
  #if ! $at; then echo $output; fi
  if [[ ! "$rewardoutput" =~ "executed transaction" ]]; then reward_failed=true; fi
  after=$(remcli get currency balance rem.token $owneraccountname  | awk '{print $1}')
  total_reward=$(echo "$after - $previous"|bc)
fi

#-----------------------------------------------------------------------------------------------------
# REMCLI COMMAND FOR TRANSFERING YOUR REWARDS
#-----------------------------------------------------------------------------------------------------

if $auto_transfer
then
  transfer_amount="$(echo "scale=4; ( $total_reward / 100 ) * $auto_transfer_perc" | bc )"
  transferoutput=$(remcli transfer $owneraccountname $auto_transfer_acct "$transfer_amount REM" -x 120 -p $owneraccountname@$transfer_permission -f 2>&1)
  #Uncomment if you want the output of the command printed
  #if ! $at; then echo $output; fi
  if [[ ! "$transferoutput" =~ "executed transaction" ]]; then transfer_failed=true; fi
fi

#-----------------------------------------------------------------------------------------------------
# REMCLI COMMAND FOR RESTAKING YOUR REWARDS
#-----------------------------------------------------------------------------------------------------

if $auto_restaking
then
  if (( restakingpercentage == 100 ))
  then
    restake_reward="$total_reward"
  else
    restake_reward=$(echo "scale=4; ( $total_reward / 100 ) * $restakingpercentage" | bc )
  fi
  restakingoutput=$(remcli system delegatebw $owneraccountname $owneraccountname "$restake_reward REM" -x 120 -p $owneraccountname@$stake_permission -f 2>&1)
  #Uncomment if you want the output of the command printed
  #if ! $at; then echo $output; fi
  if [[ ! "$restakingoutput" =~ "executed transaction" ]]; then restaking_failed=true; fi
fi

#-----------------------------------------------------------------------------------------------------
# PREPARE NOTIFICATION TO SEND TO TELEGRAM
#-----------------------------------------------------------------------------------------------------

if [ ! -z "$telegram_chatid" ]
then
  telegram_message="
Guardian Daily Summary
--------------------------------------
Date: $(date +"%d-%m-%Y")
Name: "${owneraccountname^}""
  if $auto_reward_alert
  then
    if $reward_failed
    then
      telegram_message="$telegram_message
Claimed Rewards: Failed"
      send_message=true
    else
      telegram_message="$telegram_message
Claimed Rewards: $total_reward REM"
      send_message=true
    fi
  fi
  if $auto_transfer_alert
  then
    if $transfer_failed
    then
      telegram_message="$telegram_message
Transfer Rewards: Failed"
      send_message=true
    else
      telegram_message="$telegram_message
Transfer Rewards: $transfer_amount REM"
      send_message=true
    fi
  fi
  if $auto_restaking_alert
  then
    if $restaking_failed
    then
      telegram_message="$telegram_message
Restaked Rewards: Failed"
      send_message=true
    else
      telegram_message="$telegram_message
Restaked Rewards: $restake_reward REM"
      send_message=true
    fi
  fi
  if $auto_vote_alert
  then
    if $vote_failed
    then
      telegram_message="$telegram_message
Voted Block Producers: Failed"
      send_message=true
    else
      telegram_message="$telegram_message
Voted Block Producers: $bpaccountnames"
      send_message=true
    fi
  fi

#-----------------------------------------------------------------------------------------------------
# SEND ALERT NOTIFICATIONS TO TELEGRAM BOT (IF THERE'S SOMETHING TO SEND)
#-----------------------------------------------------------------------------------------------------

  if $send_message
  then
    #If at option is active, wait without printing the progress bar
    if $at
    then
      sleep 120
    else
      printf  "\nWAITING 2 MINUTES FOR THE CONFIRMATION OF THE TRANSACTIONS\n\n"
      progress-bar 112
      printf "\n\n\n"
    fi
    curl -s -X POST https://api.telegram.org/bot$telegram_token/sendMessage -d chat_id=$telegram_chatid -d text="$telegram_message" &>/dev/null
  fi
fi
