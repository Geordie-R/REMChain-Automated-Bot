#!/bin/bash

#****************************************************************************************************#
#                                             REMCHAIN-SETUP                                         #
#****************************************************************************************************#

#----------------------------------------------------------------------------------------------------#
# INSTALLING REM PROTOCOL BINARIES                                                                   #
#----------------------------------------------------------------------------------------------------#

sudo -S apt update && sudo -S apt upgrade -y
wget https://raw.githubusercontent.com/remblock/REMChain-Scripts/master/remprotocol
chmod +x remprotocol
sudo ./remprotocol

#-----------------------------------------------------------------------------------------------------
# BOOTING REMNODE AND WALLET
#-----------------------------------------------------------------------------------------------------

wget https://remchain.remme.io/genesis.json

#----------------------------------------------------------------------------------------------------
# RESTORE FROM SNAPSHOT                                                                              
#----------------------------------------------------------------------------------------------------

sudo wget https://github.com/remblock/REMChain-Remote-Snapshots/raw/master/setup-remote-snapshot 
sudo chmod u+x setup-remote-snapshot 
sudo ./setup-remote-snapshot
cd data
cd snapshots
sudo ./restore-remote-snapshot

#----------------------------------------------------------------------------------------------------
# GRACEFULLY STOP REMNODE                                                                            
#----------------------------------------------------------------------------------------------------

remnode_pid=$(pgrep remnode)

if [ ! -z "$remnode_pid" ]; 
then
  if ps -p $remnode_pid > /dev/null; 
  then
    kill -SIGINT $remnode_pid
  fi
  while ps -p $remnode_pid > /dev/null; do
    sleep 1
  done
fi

#-----------------------------------------------------------------------------------------------------
# RUN REMNODE IN THE BACKGROUND
#-----------------------------------------------------------------------------------------------------

remnode --config-dir ./config/ --data-dir ./data/ >> remnode.log 2>&1 &
sleep 4

#----------------------------------------------------------------------------------------------------#
# RUNNING THE WALLET DAEMON                                                                          #
#----------------------------------------------------------------------------------------------------#

remvault &
sleep 2

printf "\n"
read -p 'Press [Enter] key to continue...'
printf "\n\n"

#----------------------------------------------------------------------------------------------------#
# CREATING THE REMCLI WALLET                                                                         #
#----------------------------------------------------------------------------------------------------#

remcli wallet create --file walletpass
walletpass=$(cat walletpass)
printf "\n\n"

#----------------------------------------------------------------------------------------------------#
# YOUR REMNODE WALLET PASSWORD                                                                       #
#----------------------------------------------------------------------------------------------------#

printf "[********************* TAKE NOTE OF YOUR WALLET PASSWORD *********************]\n\n"

cat ./walletpass
printf "\n"
echo " "
echo " "
read -p 'Press [Enter] key to continue...'
printf "\n\n"

#----------------------------------------------------------------------------------------------------#
# INPUT YOUR GUARDIAN PRIVATE KEY                                                                    #
#----------------------------------------------------------------------------------------------------#

printf "[********************* ENTER YOUR GUARDIAN PRIVATE KEY ***********************]\n\n"

while [ : ]
do
          read -p "ENTER YOUR GUARDIAN PRIVATE KEY: " guardianprivatekey

	  if [[ ! "$guardianprivatekey" = "${guardianprivatekey%[[:space:]]*}" ]]; then
	        printf "\nERROR: PRIVATE KEY SHOULDN'T CONTAIN ANY SPACES.\n\n"
                continue

        elif [[ ${#guardianprivatekey} -ne 51 ]]; then
                printf "\nERROR: PRIVATE KEY SHOULD ONLY BE 51 CHARACTERS LONG.\n\n"
                continue

       	elif [[ "$guardianprivatekey" =~ ['!@#$%^&*()_+,.Â£'] ]]; then
	        printf "\nERROR: PRIVATE KEY SHOULDN'T CONTAIN ANY SYMBOLS.\n\n"
		continue

	else
                break
          fi
done

#----------------------------------------------------------------------------------------------------#
# IMPORT YOUR GUARDIAN KEY INTO THE WALLET                                                           #
#----------------------------------------------------------------------------------------------------#

printf "\n\n"

remcli wallet lock > /dev/null 2>&1
remcli wallet unlock --password=$walletpass > /dev/null 2>&1
remcli wallet import --private-key=$guardianprivatekey

printf "\n\n"

#----------------------------------------------------------------------------------------------------#
# SETUP GRACEFUL SHUTDOWN                                                                            #
#----------------------------------------------------------------------------------------------------#

echo '#!/bin/sh
remnode_pid=$(pgrep remnode)
if [ ! -z "$remnode_pid" ]; then
if ps -p $remnode_pid > /dev/null; then
kill -SIGINT $remnode_pid
fi
while ps -p $remnode_pid > /dev/null; do
sleep 1
done
fi
' > /root/node_shutdown.sh
echo '[Unit]
Description=Gracefully shut down remnode to avoid database dirty flag
DefaultDependencies=no
After=poweroff.target shutdown.target reboot.target halt.target kexec.target
Requires=network-online.target network.target
[Service]
Type=oneshot
ExecStop=/root/node_shutdown.sh
RemainAfterExit=yes
KillMode=none
[Install]
WantedBy=multi-user.target' > /etc/systemd/system/node_shutdown.service
sudo chmod +x /root/node_shutdown.sh
systemctl daemon-reload
systemctl enable node_shutdown
systemctl restart node_shutdown

#----------------------------------------------------------------------------------------------------#
# CLEANUP INSTALLATION FILES                                                                         #
#----------------------------------------------------------------------------------------------------#

rm /root/remprotocol 
rm /root/setup-remote-snapshot
